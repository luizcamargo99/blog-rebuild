<div class="posts-content">
    @if (_posts != null)
    {
        @foreach (var post in _posts)
        {
            <div class="post">
                <img src="@($"data:image/png;base64,{Convert.ToBase64String(post.PhotoBanner)}")" />
                <span id="post-title">@post.Title</span>
                <div class="info-post">
                    <img src="@($"data:image/png;base64,{Convert.ToBase64String(post.AuthorPhoto)}")" />
                    <span>@post.AuthorName</span>
                </div>
            </div>
        }

    }
    else
    {
        @for (int i = 0; i < CountPosts; i++)
        {
            <div class="post loading-bg blank">
            </div>
        }
    }

</div>


@code {
    private List<MostRecentPostDTO> _posts;

    [Parameter]
    public int CountPosts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _posts = await GetMostRecentPosts();
    }

    private async Task<List<MostRecentPostDTO>> GetMostRecentPosts()
    {
        var request = await new CrudService(new HttpClient()).Get($"{Endpoints.Post}/GetMostRecent", $"?count={CountPosts}");
        return JsonConvert.DeserializeObject<List<MostRecentPostDTO>>(await request.Content.ReadAsStringAsync());
    }
}